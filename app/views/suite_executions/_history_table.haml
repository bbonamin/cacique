//
//  @Authors:
//      Brizuela Lucia                  lula.brizuela@gmail.com
//      Guerra Brenda                   brenda.guerra.7@gmail.com
//      Crosa Fernando                  fernandocrosa@hotmail.com
//      Branciforte Horacio             horaciob@gmail.com
//      Luna Juan                       juancluna@gmail.com
//
//  @copyright (C) 2010 MercadoLibre S.R.L
//
//
//  @license        GNU/GPL, see license.txt
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//
//  You should have received a copy of the GNU General Public License
//  along with this program.  If not, see http://www.gnu.org/licenses/.
//
= calendar_date_select_includes "blue"
= stylesheet_link_tag 'blue.css'
-javascript 'tabla_suiteExe_editable'

%script
  //Tabla editable
  function onload(){
  iniciarTabla();
  }
  //marked file
  var marcado  = ""; 
  var anterior = "";
  var color_anterior = "";
  
-no_permission_alert="alert('User has no permission to perform this action')"
-if suite_executions.empty? && params[:filter].nil?
  %h2{:style=>"text-align:center;margin-top:10%;"}
    %i
      =_('No Executions')
      
-elsif suite_executions.empty? && !params[:filter].nil?
  %h2{:style=>"text-align:center;margin-top:30px;"}
    %i
      =_("No results were found")
      
-else
  %div{:style=>"width:95%;"}
    -unless params.include? "filter"
      = will_paginate suite_executions
    -else
      = will_paginate suite_executions, :params => { 'filter' => filter}
  %div{ :style=>"clear: both;"}

  -form_tag({:action=>"get_report"},{:id=>"generar_pdf"}) do
    %table.detail{:id=>"executions",:name=>"table_zebra", :cellspacing=>0, :style=>"float:left;width:96%; margin-top:0px;"}
      %tr
        %th{:style=>"width:30px;"}
          %input{ :type => "checkbox", :id=>"seleccion",:name => 'todos',:value => "checkbox", :onChange => "ModificarTodos(this);", :style=>"margin:0px;"}
        %th{:style=>"width:30px;"}
          T
        %th{:style=>"min-width: 12%; max-width:12%;"}
          =_('Identifier')
        %th{:style=>"min-width: 40%; max-width:40%;"}
          =_('Name')
        %th{:style=>"min-width: 5%; max-width:10%;"}
          =_('User')
        %th
          =_('Date')
        %th
          =_('Duration')   
        %th{:style=>"min-width:12%;"}
          Configuration                
        %th
          Ok        
        %th
          =_('Status')

      -suite_executions.each do |suite_execution|
        -average = average(suite_execution)
        //verifies the name of the suite, or if an execution unit, the script
        -entity = (suite_execution.suite_id==0)? suite_execution.executions.first.circuit : suite_execution.suite
        %tr{:onClick=>"marcar(this,'#D8DCDF');"}
          %td{:style=>"width:30px;"}
            =check_box_tag "suite_executions[]", suite_execution.id
          %td{:style=>"width:30px;"}
            =(entity.instance_of? Suite)? image_tag("icons/suite_min.png", :alt=>"suite_min.png", :title=>"Suite") : image_tag("icons/script.png", :alt=>"script.png", :title=>"Script")
          -#identificador
          %td{:name=> @readonly ? "" : "edit_cell", :id=>suite_execution.id, :title => suite_execution.identifier, :ondblclick => no_permission_alert}
            =h truncate(suite_execution.identifier, :ommision => "...", :length => 20)
          %td{:title=>entity.name, :style=>"text-align: left;"}
            -#Name 
            =h truncate(entity.name, :ommision => "...", :length => 70)
          %td
            =h suite_execution.user.login.to_s            
          %td
            -#Date
            -if suite_execution.created_at.to_s(:short).match(/0?#{Time.now.day.to_s}\/0?#{Time.now.month.to_s}\/#{Time.now.year.to_s}/)
              =h suite_execution.created_at.to_s(:short).split("-")[0]
            -else
              =h suite_execution.created_at.to_s(:short).split("-")[1]
          %td
            =truncate(suite_execution.time_spent.to_s,:ommision => "...", :length => 10)
            \.s       
          %td{:style=>"width:200px;"}
            =render :partial => 'run_configuration_values', :locals=>{:exec_conf_values=> @run_configurations[suite_execution.id]}            

          %td{:style => 'color:green;width:30px;'}
            =h average[:success].to_s + '%'
          %td{:style=>"width:30px;"}   
            %div{:id=>'status_' + suite_execution.id.to_s}
              =render :partial => 'status', :locals=>{:suite_execution => suite_execution}
            =periodically_call_remote(:url => {:action => 'update_suite_execution_status_index', :suite_execution => suite_execution.id}, :condition => "!ejecucion_completa_#{suite_execution.id.to_s}", :update => 'status_' + suite_execution.id.to_s, :frequency => 5)
                     

