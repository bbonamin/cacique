//
//  @Authors:
//      Brizuela Lucia                  lula.brizuela@gmail.com
//      Guerra Brenda                   brenda.guerra.7@gmail.com
//      Crosa Fernando                  fernandocrosa@hotmail.com
//      Branciforte Horacio             horaciob@gmail.com
//      Luna Juan                       juancluna@gmail.com
//
//  @copyright (C) 2010 MercadoLibre S.R.L
//
//
//  @license        GNU/GPL, see license.txt
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//
//  You should have received a copy of the GNU General Public License
//  along with this program.  If not, see http://www.gnu.org/licenses/.
//
//Suite
-if show_model == 'suites'
  .filter_model{:id=>"filter_suites", :style=>" float:left;margin-left:10px;"}
    .form_tag{:style=>"width:230px;"}
      = image_tag("icons/suite_min.png", :alt=>"suite_min.png", :title=>"Suite", :style=>"margin-left:10px;")
      %label{:style=>"margin-left:10px; display:inline;"}
        Suite:
      -value =  params[:filter][:suite_id] && !params[:filter][:suite_id].empty? ? params[:filter][:suite_id].to_i : ""
      =select("filter", "suite_id", suite_names.collect {|p| [ truncate(p.name.capitalize, :ommision => "...", :length => 60), p.id ] }.sort!,{ :include_blank => _('All'), :selected => value},{ :style => "width: 132px; magin-left: 90px; margin-bottom:5px;"})
      //Programs
      -value =  params[:filter][:programs]  ? params[:filter][:programs]: false
      =check_box_tag "filter[programs]", "1", value, :style=>"margin-left:10px;"
      %label{:style=>"display:inline;"}
        Programadas      
//Script
-if show_model == 'scripts' 
  .filter_model{:id=>"filter_scripts", :style=>" float:left;margin-left:10px;"}
    .form_tag{:style=>"width:230px;"}
      =image_tag("icons/script.png", :alt=>"script.png", :title=>"Script", :style=>"margin-left:10px;")
      %label{:style=>"margin-left:10px; display:inline;"}
        Script:
      -value = params[:filter][:circuit_id] && !params[:filter][:circuit_id].empty? ? params[:filter][:circuit_id].to_i: ''
      =select("filter", "circuit_id",script_names.collect {|p| [truncate(p.name.capitalize, :ommision => "...", :length => 60), p.id ] }.sort!,{ :selected => value, :include_blank => _('All')},{ :onChange=>remote_function(:update => "filter_case",  :method => "get",  :url =>  "/suite_executions/show_cases_filter/",:with => 'Form.Element.serialize(this)'), :style => "width: 132px; magin-left: 90px; margin-bottom:12px;"})
      //Case
      #filter_case
        -if( params[:filter][:circuit_id] && show_model == 'scripts'  && !params[:filter][:circuit_id].empty? )
          .filter_case
            =render :partial => "filter_script", :locals => {:case_names=>case_names, :display=>display}
