//
//  @Authors:
//      Brizuela Lucia                  lula.brizuela@gmail.com
//      Guerra Brenda                   brenda.guerra.7@gmail.com
//      Crosa Fernando                  fernandocrosa@hotmail.com
//      Branciforte Horacio             horaciob@gmail.com
//      Luna Juan                       juancluna@gmail.com
//
//  @copyright (C) 2010 MercadoLibre S.R.L
//
//
//  @license        GNU/GPL, see license.txt
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//
//  You should have received a copy of the GNU General Public License
//  along with this program.  If not, see http://www.gnu.org/licenses/.
//
-javascript 'user_function'
-javascript 'editor_changes'
-javascript '/CodeMirror-2.15/lib/codemirror'
-javascript '/CodeMirror-2.15/mode/ruby/ruby.js'
=stylesheet_link_tag '/CodeMirror-2.15/lib/codemirror.css'
=stylesheet_link_tag '/CodeMirror-2.15/theme/eclipse.css'

%h1{:style=>"width:80%; float: left;"}
  =_('Edit Function')

%h2{:style=>"float:right;width:20%;text-align: right;"}
  =_('Project')
  = (@user_function.project_id !=0) ? truncate(@user_function.project.name.capitalize , :ommision => "...", :length => 30) : _('Generals')  

#checker{:style=>"display:none; "}

.form{:style=>" margin-left:30px; margin-top:20px;clear:both;"}
  -remote_form_for @user_function, :url => { :controller => "user_functions",:action => 'update', :id => @user_function.id}, :html=>{:id=>"form_edit_free"} do |f|
    = error_messages_for :user_function
    #errors

    %div{ :style => "-moz-background-inline-policy:continuous;-moz-border-radius:10px 10px 10px 10px;border:1px solid #C3C3C3;padding:15px 20px;" }    
      //Name
      %label{:for => "name" } 
        =_('Name')
        %br
        =f.text_field :name, {:size => 28, :maxlength => 50 ,:onblur=>"document.getElementById('function_head').innerHTML='Def ' + this.value"}
      %br
      //Description
      %label{:for => "description"} 
        =_('Description')
        %br
        =f.text_area :description, {:rows => 6, :style => "width:60%"}
      %br
      //Chekcs
      -if(@user_function.project_id != 0)
        %label{:for => "visibility",  :title=>_("The function can not be used by all users")} 
          -value = @user_function.visibility ? "" : "checked"
          =f.check_box :visibility, {:checked=>value}, checked_value = "0", unchecked_value = "1"
          =_('Private use')
      %label{:for => "hide", :title=>_("Will hide the code and the example of the function")} 
        -value = @user_function.hide ?  "checked" : "" 
        =f.check_box :hide, {:checked=>value}
        =_('Hide the code of the function')
      %br
      //Arguments 
      %label{:for => "cant_args"}
        =image_tag 'icons/add_blue.gif', :alt=>'add_blue.gif', :title=>_('New'), :onClick => "add_argument();", :style=>"cursor:pointer; width:15px; height:15px;"
        =_('Arguments')
        %br
        #div_arguments_table
          %table{:id => 'arguments_table'}
            - n = 0
            -@arguments.each do |argument|
              %tr{ :id => "row_"+ n.to_s}
                %td
                  %input{ :id => "user_function_args_" + n.to_s, :name => "user_function[args][#{n}]", :value => argument}
                %td
                  %img{:name => "row_" + n.to_s, :src => "/images/icons/cross.png", :alt => "cross.png", :style => "cursor:pointer; height:12px; width:12px; margin-left:10px;", :onClick => "eliminarArgument(this.name);"}
              -n += 1
            //Add the number of arguments it has the function
            %script
              cant_args_add = #{n};
      %br
      //Code
      %label{:for => "source_code"}
        =_('Code')
        =image_tag "icons/s-edit.png",:id=>"pencil_icon",:alt=>"s-edit.png",:style => "display:none;"
      .edit_free_table{:style=>"width:95%; height:400px;"}
        %div{:id => "function_head"}
          Def
          =@user_function.name
        %input{ :type => "hidden", :name => "content",         :value => "" }
        %textarea{ :id=>"scriptTextArea", :style=>"width:100%; height:335px;"}
          =@source_code.gsub("\r\n","\r").gsub("\n\r","\r").gsub("\n","\r") if @source_code
        =f.hidden_field :code, :value => ""
        End
      %br
      %br
      %label{:for => "example"} 
        =_('Example')
        %br
        =f.text_area :example, {:rows => 4, :style => "width:60%;"}
      %br
      %br 
    %b
      =_('Last modified by the user')
      \:
    =truncate(@last_modifier.name, :ommision => "...", :length => 30)
    %br
    %br

//Tools menu
-content_for :tools_menu do
  =image_tag("/images/icons/save.png",:alt=>"save",:title =>_("Save"),:onclick => "sendContent();$j('#form_edit_free').trigger('onsubmit');",:style => "margin-right:10px;cursor:pointer;", :id=>"save_button")

  //Sintax check
  =link_to_remote image_tag("/images/icons/bug.png", :alt=>"syntax check", :title=>_('Syntax Check'), :style=>"align: left;border: none;display: inline;"), :url => {:controller => "circuits", :action => "checkit"},:with=>"'code='+encodeURIComponent(encode_text( script_content.getValue() ))", :update => "checker", :complete => "document.getElementById('checker').toggle();", :method => :post

  //Versions
  #versions{:style=>'display:inline;'}
    =render :partial =>'versions'


%script
  ="var readonly= #{@readonly}";
  changed_flag = false;
  //For save before leave if there are changes in the script
  ="var message = '#{_('You have Unsaved Changes, do you want to Save before Exit?')}'"
  window.onbeforeunload = function(evt){if(changed_flag){evt.returnValue = message;return message;} }
  //CodeMirror
  script_content = CodeMirror.fromTextArea(document.getElementById("scriptTextArea"), {
  lineNumbers: true,
  theme: "eclipse",
  matchBrackets: true,
  tabMode: "indent",
  readOnly: readonly,
  onChange: function() {
  has_changed();
  }
  });


