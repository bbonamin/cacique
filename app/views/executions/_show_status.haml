=render :partial =>"layouts/popup_header", :locals=>{:element =>"show_status_#{execution.id.to_s}"}

%h3{:style=>'margin: 0 0 20px;'}
  =truncate(execution.circuit.name,:ommision => "...", :length => 70)

.form_tag{:style=>'position:absolute;overflow:auto;font-size:12px;max-height:75%;min-height:30%;width:90%; left: 4%;'}

  //Error
  -if ((execution.error and !execution.error.empty?) or (execution.position_error  and !execution.position_error.empty?))
    %b{:style=>'color:red;font-size:13px;text-decoration:underline;'}
      Error
    %br
    %br
    //POS ERROR
    -if execution.position_error and !execution.position_error.empty?
      %div{:style=>'color:#ff0000;margin-top:5px;text-decoration:underline;'}
        -execution.position_error.split("\n").each do |line|
          =h line
          %br 
      %br 
    -if execution.error and !execution.error.empty?
      -execution.error.split("\n").each do |line|
        =h line
        %br 
    -else
      %i
        Widthout errors
    %br

  //Data recoveries
  -if !execution.filtered_data_recoveries.empty? && !execution.filtered_data_recoveries.nil? 
    %b{:style=>'color:#2C4B9B;font-size:13px;text-decoration:underline;'}
      =_('Generated Data:')  
    %ul
      -execution.filtered_data_recoveries.each do |data_recovery|
        %li{:style=>'margin-bottom:5px;'}
          =data_recovery.data_name + ':'
          =data_recovery.data   
    %br

  //Snapshot
  -if !execution.execution_snapshots.empty? && !execution.execution_snapshots.nil?
    %b{:style=>'color:#2C4B9B;font-size:13px;text-decoration:underline;'}
      Snapshots
    %ul
      -execution.execution_snapshots.each do |snapshot|
        %li{:style=>'color:#31576F;'}
          =link_to truncate(snapshot.name.capitalize, :ommision => "...", :length => 30), "/executions/show_snapshot/0?snapshot_id=" + snapshot.id.to_s, :popup=> true, :style=>'color:#31576F; font-weight:normal;'
    %br

  //Output
  -if (!execution.output.nil? and !execution.output.empty?)
    %b{:style=>'color:#2C4B9B;font-size:13px;text-decoration:underline;'}
      =_('Output')
    %br
    %br
    -execution.output.split("\n").each do |line|
      =h line
      %br 
    %br
  %div{ :style=>'clear: both'}

